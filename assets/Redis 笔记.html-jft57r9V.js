const e=JSON.parse('{"key":"v-1ac1597e","path":"/notes/database/redis/Redis%20%E7%AC%94%E8%AE%B0.html","title":"Redis 笔记","lang":"zh-CN","frontmatter":{"title":"Redis 笔记","description":"Redis 常见数据结构以及使用场景分析 设置过期 string; 1. 介绍 ：string 数据结构是简单的 key-value 类型。虽然 Redis 是用 C 语言写的，但是 Redis 并没有使用 C 的字符串表示，而是自己构建了一种 简单动态字符串（simple dynamic string，SDS）。相比于 C 的原生字符串，Redis ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/code-notes/notes/database/redis/Redis%20%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"code notes"}],["meta",{"property":"og:title","content":"Redis 笔记"}],["meta",{"property":"og:description","content":"Redis 常见数据结构以及使用场景分析 设置过期 string; 1. 介绍 ：string 数据结构是简单的 key-value 类型。虽然 Redis 是用 C 语言写的，但是 Redis 并没有使用 C 的字符串表示，而是自己构建了一种 简单动态字符串（simple dynamic string，SDS）。相比于 C 的原生字符串，Redis ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-21T06:11:56.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2023-11-21T06:11:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 笔记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-21T06:11:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Redis 常见数据结构以及使用场景分析","slug":"redis-常见数据结构以及使用场景分析","link":"#redis-常见数据结构以及使用场景分析","children":[{"level":3,"title":"设置过期","slug":"设置过期","link":"#设置过期","children":[]}]},{"level":2,"title":"内存回收策略","slug":"内存回收策略","link":"#内存回收策略","children":[{"level":3,"title":"删除过期键对象","slug":"删除过期键对象","link":"#删除过期键对象","children":[]},{"level":3,"title":"内存溢出控制策略","slug":"内存溢出控制策略","link":"#内存溢出控制策略","children":[]}]},{"level":2,"title":"缓存穿透、击穿、雪崩","slug":"缓存穿透、击穿、雪崩","link":"#缓存穿透、击穿、雪崩","children":[{"level":3,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]},{"level":3,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[]},{"level":3,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[]}]},{"level":2,"title":"日志 RDB AOF","slug":"日志-rdb-aof","link":"#日志-rdb-aof","children":[{"level":3,"title":"RDB","slug":"rdb","link":"#rdb","children":[]},{"level":3,"title":"AOF","slug":"aof","link":"#aof","children":[]}]},{"level":2,"title":"内存优化","slug":"内存优化","link":"#内存优化","children":[{"level":3,"title":"字符串优化","slug":"字符串优化","link":"#字符串优化","children":[]},{"level":3,"title":"编码优化","slug":"编码优化","link":"#编码优化","children":[]}]},{"level":2,"title":"主从复制","slug":"主从复制","link":"#主从复制","children":[{"level":3,"title":"全量复制","slug":"全量复制","link":"#全量复制","children":[]},{"level":3,"title":"部分复制","slug":"部分复制","link":"#部分复制","children":[]}]},{"level":2,"title":"哨兵模式 Redis Sentinel","slug":"哨兵模式-redis-sentinel","link":"#哨兵模式-redis-sentinel","children":[{"level":3,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]}]},{"level":2,"title":"集群 Redis Cluster","slug":"集群-redis-cluster","link":"#集群-redis-cluster","children":[{"level":3,"title":"节点通信","slug":"节点通信","link":"#节点通信","children":[]}]}],"git":{"createdTime":1700505313000,"updatedTime":1700547116000,"contributors":[{"name":"shisheng.zp","email":"shisheng.zp@alibaba-inc.com","commits":2},{"name":"peng1996","email":"33412356+peng1996@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":20.64,"words":6193},"filePathRelative":"notes/database/redis/Redis 笔记.md","localizedDate":"2023年11月20日","autoDesc":true}');export{e as data};
